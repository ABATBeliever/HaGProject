#define Appname "TinyBrowser"
#include "hsp3utf.as"
#uselib "msvcrt"
#cfunc wcslen "wcslen" int
#uselib "ole32.dll"
#func CoTaskMemFree "CoTaskMemFree" sptr
#include "user32.as"
#include "kernel32.as"
#include "mod_wv2s.hsp"

/* ---------------------------------------------------------
	define
   --------------------------------------------------------- */
#define global WV2Ctrl_get_CoreWebView2      25
#define global WV2_Navigate                   5
#define global WV2_Reload                    31
#define global WV2_get_CanGoBack             38
#define global WV2_get_CanGoForward          39
#define global WV2_get_GoBack                40
#define global WV2_get_GoForward             41
#define global WV2_add_DocumentTitleChanged  46
#define global WV2_del_DocumentTitleChanged  47
#define global WV2_get_DocumentTitle         48
#define global add_NewWindowRequested      1024

#define WM_RESIZE 0x5
/* ---------------------------------------------------------
	Main Window
   --------------------------------------------------------- */
    screen 1,ginfo(20),ginfo(21),2
    gsel 0,-1:gsel 1
   	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat | $10000 | $40000
	oncmd gosub *EVENT_SIZE, WM_RESIZE
    width 640,480:gsel 1,1
	title AppName
	WV2Env 0, 0
	pEnv = stat : if ( pEnv == 0 ){ dialog "err wv2s_WV2Env",AppName : end }
	WV2Ctrl pEnv, hwnd
	curCtrl = stat
	prm = varptr(curView)
	ComCall curCtrl, WV2Ctrl_get_CoreWebView2, prm, 1
	gosub *EVENT_SIZE
	objsize 64, 32
	pos   0, 0 : button gosub "戻る", *GoBack     : idBtn_goBack = stat
	pos  64, 0 : button gosub "進む", *GoForward  : idBtn_goForward = stat
	pos 128, 0 : button gosub "リロード", *Reload
	pos 192, 0 : button gosub "About", *About
	onexit *ON_EXIT

	oncmd gosub *EVENT_TITLE, 0x9000
	WV2HdlNew 0/*type:II*/, hwnd, 0x9000
	resRecvHdl = stat
	dim token, 2
	prm = resRecvHdl, varptr(token)
	ComCall curView, WV2_add_DocumentTitleChanged, prm, 2
	
	WV2Navigate curCtrl, "https://hsp.tv"
	stop

/* ---------------------------------------------------------
	Label Go***
   --------------------------------------------------------- */
*GoBack
	prm = 0
	ComCall curView, WV2_get_GoBack, prm, 0
	return
*GoForward
	prm = 0
	ComCall curView, WV2_get_GoForward, prm, 0
	return
*Reload
	prm = 0
	ComCall curView, WV2_Reload, prm, 0
	return
*CHECK_CanGo
	prm = varptr(p1)
	ComCall curView, WV2_get_CanGoBack, prm, 1
	if stat == 0 : objenable idBtn_goBack, p1
	prm = varptr(p1)
	ComCall curView, WV2_get_CanGoForward, prm, 1
	if stat == 0 : objenable idBtn_goForward, p1
	return
*About
	dialog AppName+" Ver.1.0 UTF-8"
	return
/* ---------------------------------------------------------
	Label Event
   --------------------------------------------------------- */
*EVENT_TITLE
	prm = varptr(p1)
	ComCall curView, WV2_get_DocumentTitle, prm, 1
	if ( stat == 0 ){
		dupptr wTitle, p1, wcslen(p1)*2+2, 2
		title AppName+" - " + cnvwtos(wTitle)
		CoTaskMemFree p1
	}else {
		title AppName
	}
	gosub *CHECK_CanGo
	return
*EVENT_SIZE
	WV2SetSize curCtrl, 0, 32, ginfo_winx, ginfo_winy
	return
/* ---------------------------------------------------------
	onexit
   --------------------------------------------------------- */
*ON_EXIT
	if ( resRecvHdl ){
		prm = token(0), token(1)
		ComCall curView, WV2_del_DocumentTitleChanged, prm, 2
	}
	if curView : ComDel curView
	if curCtrl : ComDel curCtrl
	if pEnv : ComDel pEnv
	end
